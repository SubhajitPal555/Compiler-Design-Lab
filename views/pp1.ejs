<!DOCTYPE html>
<html lang="en">
<head>
      <meta charset="UTF-8">
     <meta http-equiv="X-UA-Compatible" content="IE=edge">
     <meta name="viewport" content="width=device-width, initial-scale=1.0">
     <link rel="stylesheet" href="/assets/css/style2.css">
     <title>Program 1</title>
     
     <!-- CSS only -->
     <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">


</head>
<body>
     <body> 

     <main class="main col-lg" style="max-width: 1000px;">
      <div class="container">
        <h1 class="mt-5">Aim:- </h1>
        <p class="lead">To design an online simulator that checks whether a given input string (program snippet) is a single/multi-comment or not a comment.</p>
        
      </div>

      <div class="container">
        <h1 class="mt-5">Theory:- </h1>
        <p class="lead">Given a string, representing a program snippet, the task is to check if the given string is a single/multi-line comment or not a comment.</p>
        <p class="lead">Types of Comment: </p>
        <ul class="lead">
          <li>
              <p class="lead">Single Line Comment: </p>
              <p class="lead">Comments preceded by a Double Slash (‘//’)</p>
          </li>
          <li>
              <p class="lead">Multi-line Comment: </p>
              <p class="lead">Comments starting with (‘/*’) and ending with (‘*/’).</p>
          </li>
      </ul>
      <p class="lead">Check if at the first Index(i.e. index 0) the value is ‘/’ then follow below steps else print “It is not a comment”.</p>
      <ul class="lead">
        <li>
            <p class="lead">If line[0] == ‘/’: </p>
            <p class="lead">o	If line[1] == ‘/’, then print “It is a single line comment”.</p>
             <p class="lead"> o	If line[1] == ‘*’, then traverse the string and if any adjacent pair of ‘*’ &amp; ‘/’ is found then print “It is a multi-line comment”.
              </p>
        </li>
        <li>
            <p class="lead">Otherwise, print “It is not a comment”.</p>
        </li>
    </ul>
      </div>


      <div class="container">
        <h1 class="mt-5">Input/Output Examples:- </h1>
        <ul class="lead">
          <li>
              <p class="lead">Input: line = “/* Comment */” </p>
              <p class="lead">Output: It is a multi-line comment</p>
          </li>
          <li>
              <p class="lead">Input: line = “// Comment ” </p>
              <p class="lead">Output: It is a single-line comment</p>
          </li>
      </ul>
      </div>


      <div class="container">
        <h1 class="mt-5">Online Simulator:- </h1>
        
        <p class="lead">Click on this <a href="/p1.html">Link</a> to go to the Online Simulator.</p>
      </div>

      <div class="container">
        <h1 class="mt-5">Discussion:- </h1>
        <p class="lead">We wrote the online simulator using C programming language and integrated it with the website designed using HTML, CSS, JavaScript. The simulator takes a string as input and checks whether it is a single/multi-line comment or not a comment.</p>
      </div>

      <div class="container">
        <h1 class="mt-5">Source of Error &amp; Error Recovery:- </h1>
        <p class="lead">There can be two possible sources of error for this string in the program snippet:</p>
        <ul class="lead">
          <li>
              <p class="lead">Unterminated Multi-Line Comments: </p>
              <p class="lead">It occurs when we do not terminate the comment with a valid set of characters (here the red-coloured */). Single line comment does not need to terminate, and it starts by a double slash (//), but, multi-line comment needs to be terminated by */ (asterisk and slash). If a multi-line comment is not terminated properly, then during lexical analysis phase of the compiler, the compiler will consider everything after start of the multi-line comment as a comment and ignore them during tokenization (traversing the program from left to right line-by-line and breaking them down into tokens or logical units of a program).</p>
          </li>
          <li>
              <p class="lead">Nested Multi-Line Comments:</p>
              <p class="lead">In C, multi-line comments, /* and */, do not nest ie, if we want to write a nested comment (comment within comment), the compiler during lexical analysis phase will consider the first /* as start of multi-line comment and ignore the second /* syntax as it has still not got an end for the first comment “*/”. So, the multi-line comment will end after the first */ (red coloured). After that, the rest of the comment will not be ignored and will be considered during tokenization until it again gets a start of comment line again.</p>
          </li>
      </ul>
      </div>
      <div class="groupRow">
      <a href="/"><button class="btn">Back to Home</button></a>
    </div>
      </main>
</body>
       <!-- JavaScript Bundle with Popper -->
     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</html>